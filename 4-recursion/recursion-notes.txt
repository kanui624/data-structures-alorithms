Recursion Notes

What is recursion?
A process (a function in our case) that calls itself

Why Should we know this?
    - It's everywhere
    - Even JSON.parse or JSON.stringify are recursive functions
    - dom.getElementById and DOM traversal algorithms (the dom
    is a tree structure where nested elements are like nodes in
    a tree)
    - Object traversal
    - We'll see it with more complex data structures
    
How recursive functions work
    - Invoke the same function with a different input until you 
    reach a base case
    - The base case is the condition when the recursion ends

The two essential parts of a recursive function
    - the base case
    - different input every iteration

Common Problems and where things go wrong
    - No base case
    - Forgetting to return or returning the incorrect things
    - Don't console.log to end recursive calls because it won't 
    the call stack will exceed if you don't return 

Pure Recursion Tips: 
    - For arrays, use methods like slice, the spread operator, and 
    concat that make copies of arrays so do not mutate them 
    - Remember that strings are immutable so you will need to use 
    methods like slice, substr, or substring to make copies of strings 
    - To make copies of objects use Object.assign, or the spread
    operator